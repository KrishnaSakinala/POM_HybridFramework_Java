<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="28884" started-at="2019-11-15T05:16:36Z" finished-at="2019-11-15T05:17:05Z">
    <groups>
      <group name="functional">
        <method signature="CustomersTest.addCustomerTest()[pri:0, instance:testcases.CustomersTest@57a3af25]" name="addCustomerTest" class="testcases.CustomersTest"/>
      </group> <!-- functional -->
      <group name="smoke">
        <method signature="CustomersTest.searchCustomerTest()[pri:0, instance:testcases.CustomersTest@57a3af25]" name="searchCustomerTest" class="testcases.CustomersTest"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Test" duration-ms="28884" started-at="2019-11-15T05:16:36Z" finished-at="2019-11-15T05:17:05Z">
      <class name="testcases.CustomersTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.CustomersTest@57a3af25]" name="beforeMethod" is-config="true" duration-ms="13050" started-at="2019-11-15T05:16:36Z" finished-at="2019-11-15T05:16:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCustomerTest()[pri:0, instance:testcases.CustomersTest@57a3af25]" name="addCustomerTest" duration-ms="6955" started-at="2019-11-15T05:16:49Z" finished-at="2019-11-15T05:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomerTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.CustomersTest@57a3af25]" name="getResult" is-config="true" duration-ms="2" started-at="2019-11-15T05:16:56Z" finished-at="2019-11-15T05:16:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCustomerTest status=SUCCESS method=CustomersTest.addCustomerTest()[pri:0, instance:testcases.CustomersTest@57a3af25] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.CustomersTest@57a3af25]" name="beforeMethod" is-config="true" duration-ms="8008" started-at="2019-11-15T05:16:56Z" finished-at="2019-11-15T05:17:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="searchCustomerTest()[pri:0, instance:testcases.CustomersTest@57a3af25]" name="searchCustomerTest" duration-ms="4" started-at="2019-11-15T05:17:04Z" finished-at="2019-11-15T05:17:04Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping Testcase as the RUNMODE is N.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping Testcase as the RUNMODE is N.
at testcases.CustomersTest.searchCustomerTest(CustomersTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCustomerTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.CustomersTest@57a3af25]" name="getResult" is-config="true" duration-ms="1" started-at="2019-11-15T05:17:05Z" finished-at="2019-11-15T05:17:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCustomerTest status=SKIP method=CustomersTest.searchCustomerTest()[pri:0, instance:testcases.CustomersTest@57a3af25] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testcases.CustomersTest@57a3af25]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-11-15T05:17:05Z" finished-at="2019-11-15T05:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.CustomersTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
